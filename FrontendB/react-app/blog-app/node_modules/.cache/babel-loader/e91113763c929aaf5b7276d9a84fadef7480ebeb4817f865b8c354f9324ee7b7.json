{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\AWS_workshop\\\\Frontend\\\\react-app\\\\blog-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport BlogPosts from \"./BlogPosts\";\nimport BlogPostForm from './BlogPostForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [blogPosts, setBlogPosts] = useState([]);\n  async function fetchBlogPosts() {\n    try {\n      const response = await fetch(\"http://localhost:3002/posts\");\n      const data = await response.json();\n      return setBlogPosts(data);\n    } catch (error) {\n      return console.log(error);\n    }\n  }\n  useEffect(() => {\n    fetchBlogPosts();\n  }, [setBlogPosts]);\n  // Please fill this with your own blog posts. ðŸ™‚\n  const onFormSubmit = post => {\n    fetch(\"http://localhost:3002/post\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(post)\n    }).then(() => fetchBlogPosts()).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: \"[Your Name Here]'s personal blog.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(BlogPostForm, {\n      onPostSubmit: onFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(BlogPosts, {\n      blogPosts: blogPosts.reverse()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 8\n  }, this);\n}\n_s(App, \"XPnXzGHc6ei3+85WAloLzHNf/BE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BlogPosts","BlogPostForm","jsxDEV","_jsxDEV","App","_s","blogPosts","setBlogPosts","fetchBlogPosts","response","fetch","data","json","error","console","log","onFormSubmit","post","method","headers","body","JSON","stringify","then","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onPostSubmit","reverse","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/AWS_workshop/Frontend/react-app/blog-app/src/App.tsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport BlogPosts from \"./BlogPosts\";\nimport {PostDTO} from \"./api/models/PostDTO\";\nimport BlogPostForm from './BlogPostForm';\nfunction App() {\n    const [blogPosts, setBlogPosts] = useState<PostDTO[]>([]);\n    async function fetchBlogPosts() {\n        try {\n            const response = await fetch(\"http://localhost:3002/posts\");\n            const data = await response.json();\n            return setBlogPosts(data);\n        } catch (error) {\n            return console.log(error);\n        }\n    }\n    useEffect(() => {\n        fetchBlogPosts();\n    }, [setBlogPosts]);\n   // Please fill this with your own blog posts. ðŸ™‚\n   const onFormSubmit = (post: PostDTO) => {\n    fetch(\"http://localhost:3002/post\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(post)\n    })\n        .then(() => fetchBlogPosts())\n        .catch(error => console.log(error));\n }\n   return (\n       <div className=\"App\">\n           <header className=\"App-header\">\n               {\"[Your Name Here]'s personal blog.\"}\n           </header> \n              <BlogPostForm onPostSubmit={onFormSubmit}/>\n              <BlogPosts blogPosts={blogPosts.reverse()}/>\n       </div>\n   );\n}\n\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,aAAa;AAEnC,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAY,EAAE,CAAC;EACzD,eAAeU,cAAcA,CAAA,EAAG;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,OAAOL,YAAY,CAACI,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZ,OAAOC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAC7B;EACJ;EACAd,SAAS,CAAC,MAAM;IACZS,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,CAACD,YAAY,CAAC,CAAC;EACnB;EACA,MAAMS,YAAY,GAAIC,IAAa,IAAK;IACvCP,KAAK,CAAC,4BAA4B,EAAE;MAChCQ,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC7B,CAAC,CAAC,CACGM,IAAI,CAAC,MAAMf,cAAc,CAAC,CAAC,CAAC,CAC5BgB,KAAK,CAACX,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC1C,CAAC;EACC,oBACIV,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBvB,OAAA;MAAQsB,SAAS,EAAC,YAAY;MAAAC,QAAA,EACzB;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACN3B,OAAA,CAACF,YAAY;MAAC8B,YAAY,EAAEf;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3C3B,OAAA,CAACH,SAAS;MAACM,SAAS,EAAEA,SAAS,CAAC0B,OAAO,CAAC;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEb;AAACzB,EAAA,CAnCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}