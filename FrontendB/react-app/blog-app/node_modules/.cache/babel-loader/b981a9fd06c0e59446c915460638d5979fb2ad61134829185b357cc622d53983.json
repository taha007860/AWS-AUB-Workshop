{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\AWS_workshop\\\\Frontend\\\\react-app\\\\blog-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport BlogPosts from './BlogPosts';\nimport BlogPostForm from './BlogPostForm';\nimport { Jumbotron, Container, Row, Col, Spinner, Alert } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [blogPosts, setBlogPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchBlogPosts = () => {\n    setIsLoading(true);\n    fetch('http://localhost:3000/post').then(response => response.json()).then(data => {\n      setBlogPosts(data.posts); // assuming the array is stored in a property called posts\n      setIsLoading(false);\n    }).catch(error => {\n      setError(error.message);\n      setIsLoading(false);\n    });\n  };\n  useEffect(() => {\n    fetchBlogPosts();\n  }, []);\n  const yourName = 'Bence';\n  const onFormSubmit = post => {\n    fetch('http://localhost:3000/post', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(post)\n    }).then(() => fetchBlogPosts()).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"text-center bg-primary text-white mb-0\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: yourName + \"'s Personal Travel Blog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"my-3\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: {\n            span: 6,\n            offset: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(BlogPostForm, {\n            onPostSubmit: onFormSubmit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center py-3\",\n            children: /*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this) : error ? /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(BlogPosts, {\n            blogPosts: blogPosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gKdI0xRGVZSnTxFHZLSEAmuM0YE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BlogPosts","BlogPostForm","Jumbotron","Container","Row","Col","Spinner","Alert","jsxDEV","_jsxDEV","App","_s","blogPosts","setBlogPosts","isLoading","setIsLoading","error","setError","fetchBlogPosts","fetch","then","response","json","data","posts","catch","message","yourName","onFormSubmit","post","method","headers","body","JSON","stringify","console","log","children","fluid","className","fileName","_jsxFileName","lineNumber","columnNumber","lg","span","offset","onPostSubmit","animation","variant","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/AWS_workshop/Frontend/react-app/blog-app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport BlogPosts from './BlogPosts';\nimport { PostDTO } from './api/models/PostDTO';\nimport BlogPostForm from './BlogPostForm';\nimport { Jumbotron, Container, Row, Col, Spinner, Alert } from 'react-bootstrap';\n\nfunction App() {\n  const [blogPosts, setBlogPosts] = useState<PostDTO[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchBlogPosts = () => {\n    setIsLoading(true);\n    fetch('http://localhost:3000/post')\n      .then((response) => response.json())\n      .then((data) => {\n        setBlogPosts(data.posts); // assuming the array is stored in a property called posts\n        setIsLoading(false);\n      })\n      .catch((error) => {\n        setError(error.message);\n        setIsLoading(false);\n      });\n  };\n  useEffect(() => {\n    fetchBlogPosts();\n  }, []);\n\n  const yourName = 'Bence';\n  const onFormSubmit = (post: PostDTO) => {\n    fetch('http://localhost:3000/post', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(post),\n    })\n      .then(() => fetchBlogPosts())\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <div>\n      <Jumbotron fluid className=\"text-center bg-primary text-white mb-0\">\n        <h1>{yourName + \"'s Personal Travel Blog\"}</h1>\n      </Jumbotron>\n      <Container className=\"my-3\">\n        <Row>\n          <Col lg={{ span: 6, offset: 3 }}>\n            <BlogPostForm onPostSubmit={onFormSubmit} />\n            {isLoading ? (\n              <div className=\"text-center py-3\">\n                <Spinner animation=\"border\" />\n              </div>\n            ) : error ? (\n              <Alert variant=\"danger\">{error}</Alert>\n            ) : (\n              <BlogPosts blogPosts={blogPosts} />\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}